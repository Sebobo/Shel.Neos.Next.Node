{
  "version": 3,
  "sources": ["../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react-redux/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-redux-store/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-decorators/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../../../ui-plugin/src/features/AddNextNodeToolBar.tsx", "../../../ui-plugin/src/features/AddNextNodeToolBar.module.css", "../../../ui-plugin/src/manifest.ts"],
  "sourcesContent": [null, null, null, null, null, null, null, "import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { selectors, actions } from '@neos-project/neos-ui-redux-store';\nimport { Button, Icon } from '@neos-project/react-ui-components';\nimport { neos } from '@neos-project/neos-ui-decorators';\n\nimport style from './AddNextNodeToolBar.module.css';\n\nconst withReduxState = connect((state) => ({\n    // TODO: Implement an actual selector to get the focused node's fusion path (not the only spot where we don't use selectors but the raw state in the UI)\n    focusedFusionPath: state?.cr?.nodes?.focused?.fusionPath,\n    node: selectors.CR.Nodes.focusedSelector(state),\n    getNodeByContextPath: selectors.CR.Nodes.nodeByContextPath(state)\n}), {\n    focusNode: actions.CR.Nodes.focus,\n    moveNodes: actions.CR.Nodes.moveMultiple\n});\n\nconst withNeosGlobals = neos((globalRegistry) => ({\n    nodeTypesRegistry: globalRegistry.get('@neos-project/neos-ui-contentrepository')\n}));\n\nconst withPermissionContext = (component: React.FC) => withNeosGlobals(\n    connect((_state, { nodeTypesRegistry }: { nodeTypesRegistry: NodeTypesRegistry }) => {\n        const isAllowedToAddChildOrSiblingNodesSelector = selectors.CR.Nodes.makeIsAllowedToAddChildOrSiblingNodes(nodeTypesRegistry);\n\n        return (state) => {\n            const focusedNodeContextPath = selectors.CR.Nodes.focusedNodePathSelector(state);\n            const getNodeByContextPathSelector = selectors.CR.Nodes.makeGetNodeByContextPathSelector(focusedNodeContextPath);\n            const focusedNode = getNodeByContextPathSelector(state);\n\n            const role = focusedNode ? (nodeTypesRegistry.hasRole(focusedNode.nodeType, 'document') ? 'document' : 'content') : null;\n            const isAllowedToAddChildOrSiblingNodes = isAllowedToAddChildOrSiblingNodesSelector(state, {\n                reference: focusedNodeContextPath,\n                role\n            });\n\n            return {\n                isAllowedToAddChildOrSiblingNodes\n            };\n        };\n    }, {\n        commenceNodeCreation: actions.CR.Nodes.commenceCreation\n    })(component));\n\ntype ComponentProps = {\n    contextPath: string;\n    fusionPath: string;\n    commenceNodeCreation: (contextPath: string, fusionPath: string, position: 'after' | 'before' | 'inside', nodeTypeName: string) => void;\n    isAllowedToAddChildOrSiblingNodes: boolean;\n    i18nRegistry: I18nRegistry;\n    node: CRNode;\n    nodeTypesRegistry: NodeTypesRegistry;\n};\n\nconst makeAddNextNodeToolbar = (pluginConfiguration: PluginOptions) => {\n    const AddNextNodeToolBar: React.FC<ComponentProps> = ({\n                                                              contextPath,\n                                                              fusionPath,\n                                                              commenceNodeCreation,\n                                                              isAllowedToAddChildOrSiblingNodes,\n                                                              i18nRegistry,\n                                                              node,\n                                                              nodeTypesRegistry\n                                                          }) => {\n        // Hide the button for auto created nodes like content collections\n        if (node.isAutoCreated) {\n            return null;\n        }\n\n        const nextNodeTypes: string[] = React.useMemo((): string[] => {\n            const nodeType = node ? nodeTypesRegistry.getNodeType(node.nodeType) : [];\n            let { nextNodeTypes } = nodeType.options;\n\n            // Default to the current node type if no nextNodeTypes are defined\n            if (!nextNodeTypes) {\n                nextNodeTypes = { [node.nodeType]: true };\n            }\n\n            return Object\n                .keys(nextNodeTypes)\n                .filter((nodeTypeName) => nextNodeTypes[nodeTypeName]);\n        }, [node?.nodeType]);\n\n        // Callback to start the node creation process with the given node type already selected\n        const handleCommenceNodeCreation = useCallback((nodeTypeName: string) => {\n            commenceNodeCreation(\n                contextPath,\n                fusionPath,\n                'after',\n                nodeTypeName\n            );\n        }, [contextPath, fusionPath, commenceNodeCreation]);\n\n        // TODO: Add second colored plus icon on buttons\n        return (\n            <div className={style.addNextNodeButtons} id=\"neos-InlineToolbar-AddNextNode\">\n                {nextNodeTypes.map((nodeTypeName: string) => {\n                    const nodeType = nodeTypesRegistry.getNodeType(nodeTypeName);\n                    const nodeTypeLabel = nodeType ? i18nRegistry.translate(nodeType.label) : nodeTypeName;\n                    return nodeType ? (\n                        <Button\n                            key={nodeTypeName}\n                            className={style.addNextNodeButton}\n                            disabled={!isAllowedToAddChildOrSiblingNodes}\n                            onClick={() => handleCommenceNodeCreation(nodeTypeName)}\n                            title={i18nRegistry.translate('Shel.Neos.Next.Node:Main:AddNextNode', `Create \"${nodeTypeLabel}\" as next element`, { nodeTypeLabel })}\n                        >\n                            <span className=\"fa-layers fa-fw\">\n                                <Icon\n                                    icon={nodeType.ui?.icon || 'plus'}\n                                    hoverStyle=\"brand\"\n                                    size=\"lg\"\n                                />\n                                <Icon icon=\"circle\" color=\"primaryBlue\" transform=\"shrink-3 down-10 right-10\" />\n                                <Icon icon=\"plus\" transform=\"shrink-7 down-10 right-10\" />\n                            </span>\n                        </Button>\n                    ) : null;\n                })}\n            </div>\n        );\n    };\n\n    return withReduxState(withPermissionContext(AddNextNodeToolBar as any));\n};\n\nexport default makeAddNextNodeToolbar;\n", ".addNextNodeButtons {\n    display: flex;\n    float: left;\n    border-right: 1px solid #3f3f3f;\n\n    &:not(:first-child) {\n        border-left: 1px solid #3f3f3f;\n    }\n}\n\n.addNextNodeButton {\n    padding-left: 0;\n    padding-right: 0;\n}\n", "import manifest from '@neos-project/neos-ui-extensibility';\nimport makeNextNodeToolbar from './features/AddNextNodeToolBar';\n\nmanifest('Shel.Neos.Next.Node:ToolBar', {}, (globalRegistry, { frontendConfiguration }) => {\n    const guestFrameRegistry = globalRegistry.get('@neos-project/neos-ui-guest-frame');\n    const pluginConfiguration = frontendConfiguration['Shel.Neos.Next.Node:ToolBar'];\n\n    const Toolbar = makeNextNodeToolbar(pluginConfiguration);\n\n    guestFrameRegistry.set('NodeToolbar/Buttons/AddNextNodeToolBar', Toolbar, 'before AddNode');\n});\n"],
  "mappings": "kjBAAc,SAAPA,EAAqCC,EAAW,CACnD,MAAO,IAAIC,IAAe,CACtB,GAAK,OAAe,qBAAqB,GAAM,OAAe,qBAAqB,EAAE,IAAID,CAAG,EAAE,EAC1F,OAAQ,OAAe,qBAAqB,EAAE,IAAIA,CAAG,EAAE,EAAE,GAAGC,CAAI,EAGpE,MAAM,IAAI,MAAM,8EAA+E,CACnG,CACJ,CARA,IAAAC,EAAAC,EAAA,QCAA,IAAAC,EAAAC,EAAA,CAAAC,GAAAC,IAAA,CAAAC,IAEAD,EAAO,QAAUE,EAAoB,QAAQ,EAAC,EAAG,QCFjD,IAAAC,EAAAC,EAAA,CAAAC,GAAAC,IAAA,CAAAC,IAEAD,EAAO,QAAUE,EAAoB,QAAQ,EAAC,EAAG,aCFjD,IAAAC,EAAAC,EAAA,CAAAC,GAAAC,IAAA,CAAAC,IAEAD,EAAO,QAAUE,EAAoB,qBAAqB,EAAC,EAAG,mBCF9D,IAAAC,EAAAC,EAAA,CAAAC,GAAAC,IAAA,CAAAC,IAEAD,EAAO,QAAUE,EAAoB,qBAAqB,EAAC,EAAG,oBCF9D,IAAAC,EAAAC,EAAA,CAAAC,GAAAC,IAAA,CAAAC,IAEAD,EAAO,QAAUE,EAAoB,qBAAqB,EAAC,EAAG,mBCD9DC,IAMA,IAAAC,EAAeC,EAAoB,UAAU,ECP7C,IAAAC,EAAmC,OACnCC,EAAwB,OAExBC,EAAmC,OACnCC,EAA6B,OAC7BC,EAAqB,OCLrB,IAAAC,EAAA,CAAC,mBAAAC,IAUA,kBAAAC,KDDD,IAAMC,KAAiB,WAASC,IAAW,CAEvC,kBAAmBA,GAAO,IAAI,OAAO,SAAS,WAC9C,KAAM,YAAU,GAAG,MAAM,gBAAgBA,CAAK,EAC9C,qBAAsB,YAAU,GAAG,MAAM,kBAAkBA,CAAK,CACpE,GAAI,CACA,UAAW,UAAQ,GAAG,MAAM,MAC5B,UAAW,UAAQ,GAAG,MAAM,YAChC,CAAC,EAEKC,KAAkB,QAAMC,IAAoB,CAC9C,kBAAmBA,EAAe,IAAI,yCAAyC,CACnF,EAAE,EAEIC,EAAyBC,GAAwBH,KACnD,WAAQ,CAACI,EAAQ,CAAE,kBAAAC,CAAkB,IAAgD,CACjF,IAAMC,EAA4C,YAAU,GAAG,MAAM,sCAAsCD,CAAiB,EAE5H,OAAQN,GAAU,CACd,IAAMQ,EAAyB,YAAU,GAAG,MAAM,wBAAwBR,CAAK,EAEzES,EAD+B,YAAU,GAAG,MAAM,iCAAiCD,CAAsB,EAC9DR,CAAK,EAEhDU,EAAOD,EAAeH,EAAkB,QAAQG,EAAY,SAAU,UAAU,EAAI,WAAa,UAAa,KAMpH,MAAO,CACH,kCANsCF,EAA0CP,EAAO,CACvF,UAAWQ,EACX,KAAAE,CACJ,CAAC,CAID,CACJ,CACJ,EAAG,CACC,qBAAsB,UAAQ,GAAG,MAAM,gBAC3C,CAAC,EAAEN,CAAS,CAAC,EAYXO,EAA0BC,GAqErBb,EAAeI,EApE+B,CAAC,CACI,YAAAU,EACA,WAAAC,EACA,qBAAAC,EACA,kCAAAC,EACA,aAAAC,EACA,KAAAC,EACA,kBAAAZ,CACJ,IAAM,CAExD,GAAIY,EAAK,cACL,OAAO,KAGX,IAAMC,EAA0B,EAAAC,QAAM,QAAQ,IAAgB,CAC1D,IAAMC,EAAWH,EAAOZ,EAAkB,YAAYY,EAAK,QAAQ,EAAI,CAAC,EACpE,CAAE,cAAAC,CAAc,EAAIE,EAAS,QAGjC,OAAKF,IACDA,EAAgB,CAAE,CAACD,EAAK,QAAQ,EAAG,EAAK,GAGrC,OACF,KAAKC,CAAa,EAClB,OAAQG,GAAiBH,EAAcG,CAAY,CAAC,CAC7D,EAAG,CAACJ,GAAM,QAAQ,CAAC,EAGbK,KAA6B,eAAaD,GAAyB,CACrEP,EACIF,EACAC,EACA,QACAQ,CACJ,CACJ,EAAG,CAACT,EAAaC,EAAYC,CAAoB,CAAC,EAGlD,OACI,EAAAK,QAAA,cAAC,OAAI,UAAWI,EAAM,mBAAoB,GAAG,kCACxCL,EAAc,IAAKG,GAAyB,CACzC,IAAMD,EAAWf,EAAkB,YAAYgB,CAAY,EACrDG,EAAgBJ,EAAWJ,EAAa,UAAUI,EAAS,KAAK,EAAIC,EAC1E,OAAOD,EACH,EAAAD,QAAA,cAAC,UACG,IAAKE,EACL,UAAWE,EAAM,kBACjB,SAAU,CAACR,EACX,QAAS,IAAMO,EAA2BD,CAAY,EACtD,MAAOL,EAAa,UAAU,uCAAwC,WAAWQ,CAAa,oBAAqB,CAAE,cAAAA,CAAc,CAAC,GAEpI,EAAAL,QAAA,cAAC,QAAK,UAAU,mBACZ,EAAAA,QAAA,cAAC,QACG,KAAMC,EAAS,IAAI,MAAQ,OAC3B,WAAW,QACX,KAAK,KACT,EACA,EAAAD,QAAA,cAAC,QAAK,KAAK,SAAS,MAAM,cAAc,UAAU,4BAA4B,EAC9E,EAAAA,QAAA,cAAC,QAAK,KAAK,OAAO,UAAU,4BAA4B,CAC5D,CACJ,EACA,IACR,CAAC,CACL,CAER,CAEqE,CAAC,EAGnEI,EAAQb,EE7Hfe,EAAS,8BAA+B,CAAC,EAAG,CAACC,EAAgB,CAAE,sBAAAC,CAAsB,IAAM,CACvF,IAAMC,EAAqBF,EAAe,IAAI,mCAAmC,EAC3EG,EAAsBF,EAAsB,6BAA6B,EAEzEG,EAAUC,EAAoBF,CAAmB,EAEvDD,EAAmB,IAAI,yCAA0CE,EAAS,gBAAgB,CAC9F,CAAC",
  "names": ["readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "require_react", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_redux", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_redux_store", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_ui_components", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_decorators", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "init_readFromConsumerApi", "dist_default", "readFromConsumerApi", "import_react", "import_react_redux", "import_neos_ui_redux_store", "import_react_ui_components", "import_neos_ui_decorators", "AddNextNodeToolBar_default", "addNextNodeButtons", "addNextNodeButton", "withReduxState", "state", "withNeosGlobals", "globalRegistry", "withPermissionContext", "component", "_state", "nodeTypesRegistry", "isAllowedToAddChildOrSiblingNodesSelector", "focusedNodeContextPath", "focusedNode", "role", "makeAddNextNodeToolbar", "pluginConfiguration", "contextPath", "fusionPath", "commenceNodeCreation", "isAllowedToAddChildOrSiblingNodes", "i18nRegistry", "node", "nextNodeTypes", "React", "nodeType", "nodeTypeName", "handleCommenceNodeCreation", "AddNextNodeToolBar_default", "nodeTypeLabel", "dist_default", "globalRegistry", "frontendConfiguration", "guestFrameRegistry", "pluginConfiguration", "Toolbar", "AddNextNodeToolBar_default"]
}
