{
  "version": 3,
  "sources": ["../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-guest-frame/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react-redux/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-redux-store/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-decorators/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/redux-actions/index.js", "../../../ui-plugin/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../../../ui-plugin/src/manifest.ts", "../../../ui-plugin/src/features/AddNextNodeToolBar.tsx", "../../../ui-plugin/src/features/Events.ts", "../../../ui-plugin/src/features/AddNextNodeToolBar.module.css", "../../../ui-plugin/src/helpers/hooks.ts", "../../../ui-plugin/src/features/CKEditorPlugin.ts", "../../../ui-plugin/src/actions/index.ts"],
  "sourcesContent": [null, null, null, null, null, null, null, null, null, "/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport manifest from '@neos-project/neos-ui-extensibility';\n// @ts-ignore\nimport { findNodeInGuestFrame } from '@neos-project/neos-ui-guest-frame';\n\nimport makeNextNodeToolbar from './features/AddNextNodeToolBar';\nimport CKEditorPlugin from './features/CKEditorPlugin';\nimport { actions } from './actions';\n\nmanifest('Shel.Neos.Next.Node:ToolBar', {}, (globalRegistry, { frontendConfiguration }) => {\n    const guestFrameRegistry = globalRegistry.get('@neos-project/neos-ui-guest-frame');\n    const ckEditorRegistry = globalRegistry.get('ckEditor5');\n    const serverFeedbackHandlers = globalRegistry.get('serverFeedbackHandlers');\n    const pluginConfiguration = frontendConfiguration['Shel.Neos.Next.Node:ToolBar'] as PluginConfiguration;\n\n    // Create and register the toolbar component\n    const Toolbar = makeNextNodeToolbar(pluginConfiguration);\n    guestFrameRegistry.set('NodeToolbar/Buttons/AddNextNodeToolBar', Toolbar, 'before AddNode');\n\n    // Register CKEditor plugin which provides the hotkey inside the inline editing mode\n    const config = ckEditorRegistry.get('config');\n    config.set('nextNode', (config) => {\n        config.plugins = config.plugins || [];\n        config.plugins.push(CKEditorPlugin);\n        return config;\n    });\n\n    // Register hotkeys to trigger next node creation from anywhere in the UI\n    globalRegistry.get('hotkeys').set('Shel.Neos.Next.Node:createPrimary', {\n        description: 'Create next node',\n        action: actions.createNextNode,\n    });\n    globalRegistry.get('hotkeys').set('Shel.Neos.Next.Node:createSecondary', {\n        description: 'Create next node',\n        action: actions.createNextNode,\n    });\n\n    // After a new node was created, we try to focus the first initialized editable inside of it\n    serverFeedbackHandlers.set(\n        'Neos.Neos.Ui:RenderContentOutOfBand/NextNode',\n        async (feedbackPayload: RenderContentOutOfBandFeedbackPayload) => {\n            const { contextPath, parentDomAddress } = feedbackPayload;\n            // As we don't have a direct reference to the newly created node, we need to find it in the DOM\n            const parentElement =\n                parentDomAddress && findNodeInGuestFrame(parentDomAddress.contextPath, parentDomAddress.fusionPath);\n            const newElement = parentElement.querySelector(`[data-__neos-node-contextpath=\"${contextPath}\"]`);\n            if (newElement) {\n                const firstInitializedEditable = newElement.querySelector('[data-neos-inline-editor-is-initialized]');\n                if (!firstInitializedEditable) {\n                    return;\n                }\n                // Even though the element is marked as initialized, it might not be fully ready to be focused yet, so we wait a bit\n                setTimeout(() => {\n                    firstInitializedEditable.focus();\n                    console.debug('Focusing first initialized editable in the new node', firstInitializedEditable);\n                }, 10);\n            }\n        },\n        'after Main',\n    );\n});\n", "/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-ignore\nimport React, { useMemo, useEffect, useCallback } from 'react';\n// @ts-ignore\nimport { connect } from 'react-redux';\n\n// @ts-ignore\nimport { selectors, actions } from '@neos-project/neos-ui-redux-store';\n// @ts-ignore\nimport { Button, Icon } from '@neos-project/react-ui-components';\n// @ts-ignore\nimport { neos } from '@neos-project/neos-ui-decorators';\n\nimport { CREATE_NEXT_NODE_EVENT } from './Events';\n\nimport style from './AddNextNodeToolBar.module.css';\nimport { useEventCallback } from '../helpers/hooks';\n\nconst withReduxState = connect(\n    (state: object) => ({\n        node: selectors.CR.Nodes.focusedSelector(state),\n        getNodeByContextPath: selectors.CR.Nodes.nodeByContextPath(state),\n        inspectorIsDirty: selectors.UI.Inspector.isDirty(state),\n    }),\n    {\n        focusNode: actions.CR.Nodes.focus,\n        moveNodes: actions.CR.Nodes.moveMultiple,\n    },\n);\n\nconst withNeosGlobals = neos((globalRegistry) => ({\n    nodeTypesRegistry: globalRegistry.get('@neos-project/neos-ui-contentrepository'),\n}));\n\nconst withPermissionContext = (component: React.FC) =>\n    withNeosGlobals(\n        connect(\n            (_state, { nodeTypesRegistry }: { nodeTypesRegistry: NodeTypesRegistry }) => {\n                const getAllowedSiblingNodeTypesSelector =\n                    selectors.CR.Nodes.makeGetAllowedSiblingNodeTypesSelector(nodeTypesRegistry);\n\n                return (state) => {\n                    const focusedNodeContextPath = selectors.CR.Nodes.focusedNodePathSelector(state);\n                    const getNodeByContextPathSelector =\n                        selectors.CR.Nodes.makeGetNodeByContextPathSelector(focusedNodeContextPath);\n                    const focusedNode = getNodeByContextPathSelector(state);\n\n                    const role = focusedNode\n                        ? nodeTypesRegistry.hasRole(focusedNode.nodeType, 'document')\n                            ? 'document'\n                            : 'content'\n                        : null;\n                    const allowedSiblingNodeTypes = focusedNode\n                        ? getAllowedSiblingNodeTypesSelector(state, {\n                              reference: focusedNodeContextPath,\n                              role,\n                          })\n                        : [];\n\n                    return {\n                        allowedSiblingNodeTypes,\n                        isAllowedToAddChildOrSiblingNodes: allowedSiblingNodeTypes.length > 0,\n                    };\n                };\n            },\n            {\n                commenceNodeCreation: actions.CR.Nodes.commenceCreation,\n            },\n        )(component),\n    );\n\ntype ComponentProps = {\n    contextPath: string;\n    fusionPath: string;\n    commenceNodeCreation: (\n        contextPath: string,\n        fusionPath: string,\n        position: 'after' | 'before' | 'inside',\n        nodeTypeName: string,\n    ) => void;\n    isAllowedToAddChildOrSiblingNodes: boolean;\n    allowedSiblingNodeTypes: string[];\n    i18nRegistry: I18nRegistry;\n    node: CRNode;\n    nodeTypesRegistry: NodeTypesRegistry;\n    inspectorIsDirty: boolean;\n};\n\nconst makeAddNextNodeToolbar = (pluginConfiguration: PluginConfiguration) => {\n    const AddNextNodeToolBar: React.FC<ComponentProps> = ({\n        contextPath,\n        fusionPath,\n        commenceNodeCreation,\n        isAllowedToAddChildOrSiblingNodes,\n        allowedSiblingNodeTypes,\n        i18nRegistry,\n        node,\n        nodeTypesRegistry,\n        inspectorIsDirty,\n    }) => {\n        const nextNodeTypes: string[] = useMemo((): string[] => {\n            const nodeType = node ? nodeTypesRegistry.getNodeType(node.nodeType) : [];\n            const { nextNodeTypes } = nodeType.options;\n\n            // Filter out the next node types which are disabled or not allowed as sibling nodes\n            const nextNodeTypeCandidates = nextNodeTypes\n                ? Object.keys(nextNodeTypes).filter((nodeTypeName) => {\n                      return nextNodeTypes[nodeTypeName] && allowedSiblingNodeTypes.includes(nodeTypeName);\n                  })\n                : [];\n\n            if (nextNodeTypeCandidates.length > 0) {\n                return nextNodeTypeCandidates;\n            }\n            if (pluginConfiguration.currentNodeTypeAsFallback) {\n                // Default to the current node type if no candidates for the next node type are available\n                return [node.nodeType];\n            }\n            return [];\n        }, [node?.nodeType, allowedSiblingNodeTypes]);\n\n        // Callback to start the node creation process with the given node type already selected\n        const handleCommenceNodeCreation = useEventCallback(\n            (nodeTypeName: string) =>\n                !inspectorIsDirty && commenceNodeCreation(contextPath, fusionPath, 'after', nodeTypeName),\n        );\n\n        useEffect(() => {\n            const contentWindow = (document.querySelector('[name=\"neos-content-main\"]') as HTMLIFrameElement)\n                ?.contentWindow;\n\n            if (node.isAutoCreated || !contentWindow) {\n                return;\n            }\n\n            // Create a listener to open the creation dialog with the first candidate preselected (if available) when the event is fired (e.g. by the CKEditor plugin)\n            const createFirstCandidateListener = (e: KeyboardEvent) => {\n                const nextNodeType = nextNodeTypes.length > 0 ? nextNodeTypes[0] : null;\n                if (e.type === CREATE_NEXT_NODE_EVENT) {\n                    handleCommenceNodeCreation(nextNodeType);\n                }\n                if (e.key === 'Enter' && (e.metaKey || e.ctrlKey)) {\n                    e.stopImmediatePropagation();\n                    e.preventDefault();\n                    handleCommenceNodeCreation(nextNodeType);\n                }\n            };\n\n            contentWindow.addEventListener(CREATE_NEXT_NODE_EVENT, createFirstCandidateListener);\n            contentWindow.addEventListener('keydown', createFirstCandidateListener, true);\n\n            return () => {\n                contentWindow.removeEventListener(CREATE_NEXT_NODE_EVENT, createFirstCandidateListener);\n                contentWindow.removeEventListener('keydown', createFirstCandidateListener, true);\n            };\n        }, [contextPath, handleCommenceNodeCreation]);\n\n        return !node.isAutoCreated ? (\n            <div className={style.addNextNodeButtons} id=\"neos-InlineToolbar-AddNextNode\">\n                {nextNodeTypes.map((nodeTypeName: string, index: number) => {\n                    const nodeType = nodeTypesRegistry.getNodeType(nodeTypeName);\n                    const nodeTypeLabel = nodeType ? i18nRegistry.translate(nodeType.label) : nodeTypeName;\n                    const tooltip =\n                        index === 0\n                            ? i18nRegistry.translate(\n                                  'Shel.Neos.Next.Node:Main:AddPrimaryNextNode',\n                                  `Create \"${nodeTypeLabel}\" as next element (Ctrl+Enter | Cmd + Enter)`,\n                                  { nodeTypeLabel },\n                              )\n                            : i18nRegistry.translate(\n                                  'Shel.Neos.Next.Node:Main:AddNextNode',\n                                  `Create \"${nodeTypeLabel}\" as next element`,\n                                  { nodeTypeLabel },\n                              );\n                    return nodeType ? (\n                        <Button\n                            key={nodeTypeName}\n                            className={style.addNextNodeButton}\n                            disabled={!isAllowedToAddChildOrSiblingNodes}\n                            onClick={() => handleCommenceNodeCreation(nodeTypeName)}\n                            title={tooltip}\n                        >\n                            <span className=\"fa-layers fa-fw\">\n                                <Icon icon={nodeType.ui?.icon || 'plus'} hoverStyle=\"brand\" size=\"lg\" />\n                                <Icon icon=\"circle\" color=\"primaryBlue\" transform=\"shrink-3 down-10 right-10\" />\n                                <Icon icon=\"plus\" transform=\"shrink-7 down-10 right-10\" />\n                            </span>\n                        </Button>\n                    ) : null;\n                })}\n            </div>\n        ) : null;\n    };\n\n    return withReduxState(withPermissionContext(AddNextNodeToolBar as never));\n};\n\nexport default makeAddNextNodeToolbar;\n", "export const CREATE_NEXT_NODE_EVENT = 'shelNeosNextNode:createFirstCandidate';\n\nexport function triggerCreateFirstCandidateEvent() {\n    const guestFrame = window.document.querySelector('[name=\"neos-content-main\"]');\n    if (guestFrame && guestFrame.contentWindow) {\n        guestFrame.contentWindow.dispatchEvent(new CustomEvent(CREATE_NEXT_NODE_EVENT));\n    }\n}\n", ".addNextNodeButtons {\n    display: flex;\n    float: left;\n    border-right: 1px solid #3f3f3f;\n\n    &:not(:first-child) {\n        border-left: 1px solid #3f3f3f;\n    }\n}\n\n.addNextNodeButton {\n    padding-left: 0;\n    padding-right: 0;\n}\n", "import { useRef, useEffect, useCallback } from 'react';\n\n/**\n * A hook that returns a memoized callback which always has the latest version of the handler.\n * This prevents triggering effects or re-renders when the handler changes.\n */\nexport function useEventCallback<T, K>(handler?: (value: T, event: K) => void): (value: T, event: K) => void {\n    const callbackRef = useRef(handler);\n\n    useEffect(() => {\n        callbackRef.current = handler;\n    });\n\n    return useCallback((value: T, event: K) => callbackRef.current && callbackRef.current(value, event), []);\n}\n", "import { triggerCreateFirstCandidateEvent } from './Events';\n\nexport default function CKEditorPlugin(editor) {\n    // Define Ctrl+Enter keystroke to trigger next node creation from inside the inline editor\n    editor.keystrokes.set('Ctrl+Enter', (event, cancel) => {\n        triggerCreateFirstCandidateEvent();\n        cancel();\n        // Return false to ensure the event is fully handled\n        return false;\n    });\n}\n", "import { createAction } from 'redux-actions';\nimport { triggerCreateFirstCandidateEvent } from '../features/Events';\n\nexport const actionTypes = {\n    CREATE_NEXT_NODE: 'CREATE_NEXT_NODE',\n};\n\nconst createNextNode = createAction(actionTypes.CREATE_NEXT_NODE, () => {\n    triggerCreateFirstCandidateEvent();\n});\n\nexport const actions = {\n    createNextNode,\n};\n"],
  "mappings": "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",
  "names": ["readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "require_neos_ui_guest_frame", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_redux", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_redux_store", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_ui_components", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_decorators", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_redux_actions", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "init_readFromConsumerApi", "dist_default", "readFromConsumerApi", "import_neos_ui_guest_frame", "import_react", "import_react_redux", "import_neos_ui_redux_store", "import_react_ui_components", "import_neos_ui_decorators", "CREATE_NEXT_NODE_EVENT", "triggerCreateFirstCandidateEvent", "guestFrame", "AddNextNodeToolBar_default", "addNextNodeButtons", "addNextNodeButton", "import_react", "useEventCallback", "handler", "callbackRef", "value", "event", "withReduxState", "state", "withNeosGlobals", "globalRegistry", "withPermissionContext", "component", "_state", "nodeTypesRegistry", "getAllowedSiblingNodeTypesSelector", "focusedNodeContextPath", "focusedNode", "role", "allowedSiblingNodeTypes", "makeAddNextNodeToolbar", "pluginConfiguration", "contextPath", "fusionPath", "commenceNodeCreation", "isAllowedToAddChildOrSiblingNodes", "i18nRegistry", "node", "inspectorIsDirty", "nextNodeTypes", "nodeType", "nextNodeTypeCandidates", "nodeTypeName", "handleCommenceNodeCreation", "useEventCallback", "contentWindow", "createFirstCandidateListener", "e", "nextNodeType", "CREATE_NEXT_NODE_EVENT", "React", "AddNextNodeToolBar_default", "index", "nodeTypeLabel", "tooltip", "CKEditorPlugin", "editor", "event", "cancel", "triggerCreateFirstCandidateEvent", "import_redux_actions", "actionTypes", "createNextNode", "triggerCreateFirstCandidateEvent", "actions", "dist_default", "globalRegistry", "frontendConfiguration", "guestFrameRegistry", "ckEditorRegistry", "serverFeedbackHandlers", "pluginConfiguration", "Toolbar", "AddNextNodeToolBar_default", "config", "CKEditorPlugin", "actions", "feedbackPayload", "contextPath", "parentDomAddress", "newElement", "firstInitializedEditable"]
}
